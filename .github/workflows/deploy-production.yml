name: Continuous Deployment (production)

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  tests:
    uses: ./.github/workflows/ci-tests.yml

  deployment:
    runs-on: ubuntu-latest
    needs: tests

    name: Deploy to AWS production environment
    if: ${{ success() && github.event.pull_request.merged == true }}

    env:
      BREF_PHP_VERSION: ${{ vars.BREF_PHP_VERSION || '82' }}
      APP_NAME: ${{ vars.APP_NAME || 'Laravel' }}
      SLS_SERVICE: ${{ vars.SLS_SERVICE || 'app' }}
      SLS_BASE_DOMAIN: ${{ vars.SLS_BASE_DOMAIN || 'example.com' }}
      SLS_CERTIFICATE_ARN: ${{ secrets.SLS_CERTIFICATE_ARN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        env:
          phpts: ts
        with:
          php-version: 8.2
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, parallel
          ini-values: opcache.enable_cli=1, opcache.enable=1, opcache.jit_buffer_size=64M, opcache.jit=1205, opcache.enable_file_override=1, opcache.max_accelerated_files=4000, opcache.validate_timestamps=0, opcache.interned_strings_buffer=8
          coverage: none

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Composer dependencies
        uses: ramsey/composer-install@v2
        with:
          composer-options: --prefer-dist --optimize-autoloader --no-suggest

      - name: Generate App key for deployment
        run: echo "APP_KEY=$(php artisan --no-ansi key:generate --show)" >> $GITHUB_ENV

      - name: Install Node dependencies
        run: npm install

      - name: Build frontend assets
        run: npm run build

      - name: Deploy to development environment
        uses: serverless/github-action@v3
        with:
          args: deploy --region=${{ secrets.AWS_REGION || 'us-east-1' }} --stage=production
